messages:
  - role: system
    content: Act as a highly skilled senior developer and build the app.
  - role: user
    content: >-
      develop a simple, lightweight, and responsive tap leaderboard mobile app.
      The app must be adhering to enterprise-level coding and design standards:


      1. **App Overview and Objectives**:  
         - Clearly define the purpose of the app, its target audience, and goals to be achieved.  
         - Highlight the importance of lightweight design and responsive performance.  

      2. **Core Features Description**:  
         - Detail the tap-based interaction mechanism (e.g., how taps are measured, user feedback).  
         - Explain the hierarchical structure and functionality of the leaderboard, including user ranking and real-time updates.  

      3. **Design Specifications**:  
         - Define requirements ensuring a responsive User Interface (UI) across various device sizes, screen resolutions, and orientations (portrait and landscape).  
         - Include design principles such as minimalism, accessibility (WCAG), and adaptability for both Android and iOS platforms.  

      4. **Development Frameworks and Tools**:  
         - Specify recommended lightweight frontend frameworks (e.g., Flutter, React Native) and backend technologies.  
         - Identify Integrated Development Environments (IDEs), libraries, and plugins that align with creating efficient mobile applications.  

      5. **Backend Requirements**:  
         - Define database technologies for efficient user data storage with minimal latency.  
         - Specify APIs for handling functions such as leaderboard synchronization and secure communication.  
         - Establish guidelines for managing high concurrency, ensuring leaderboard consistency during real-time updates.

      6. **Deployment Specifications**:  
         - Provide step-by-step guidelines for app preparation, testing, and deployment to Google Play Store and Apple App Store.  
         - Include requirements for platform-specific app packaging and signing processes (e.g., APK/AAB for Android, IPA for iOS).  
         - Outline app review and approval procedures according to app store policies.  

      7. **Performance Optimization**:  
         - Detail strategies for reducing app size, such as code minification, image compression, and efficient asset loading techniques.  
         - Recommend methods to optimize app startup time and maintain a responsive user experience under varying network conditions.  

      8. **Security and Compliance Standards**:  
         - Specify adherence to security best practices, including data encryption, secure authentication, and OWASP Mobile Top 10 guidelines.  
         - Define policies ensuring compliance with GDPR, CCPA, or other relevant data protection regulations.  
         - Incorporate recommendations for app store approval, such as user permission handling and privacy policy inclusion.

      9. **Coding and Design Standards**:  
         - Mandate the use of Object-Oriented Programming (OOP) principles, key design patterns (e.g., MVC, MVVM), and SOLID principles for maintainable and scalable code.  
         - Provide guidelines for clean coding practices, version control (e.g., Git), and code review workflows.  

      Ensure all instructions and details are clear, cohesive, and structured to
      enable consistent implementation. Use industry-standard terminology
      throughout to align with best practices and facilitate seamless
      communication among stakeholders.


      develop the complete application with above details.
model: openai/gpt-4o
